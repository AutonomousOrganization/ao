// Generated by CoffeeScript 1.12.7
(function() {
  var alphabet, alphabet10x10, columns, create10x10alpha, height, horizontalLetter10x10, horizontalLetter5x5, ledUtil, longBanner, npm_opc, shortBanner, strand, stream, topHorizontalWord, verticalLetter, width;

  npm_opc = require("./opc_init.js");

  width = npm_opc.width;

  height = npm_opc.height;

  strand = npm_opc.strand;

  columns = npm_opc.columns;

  stream = npm_opc.stream;

  ledUtil = require("./led_util.js");

  alphabet = {
    A: [[0, 1, 1, 1, 0], [1, 0, 0, 0, 1], [1, 1, 1, 1, 1], [1, 0, 0, 0, 1], [1, 0, 0, 0, 1]],
    B: [[1, 1, 1, 1, 0], [1, 0, 0, 0, 1], [1, 1, 1, 1, 0], [1, 0, 0, 0, 1], [1, 1, 1, 1, 0]],
    C: [[0, 1, 1, 1, 1], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0], [0, 1, 1, 1, 1]],
    D: [[1, 1, 1, 1, 0], [1, 0, 0, 0, 1], [1, 0, 0, 0, 1], [1, 0, 0, 0, 1], [1, 1, 1, 1, 0]],
    E: [[1, 1, 1, 1, 1], [1, 0, 0, 0, 0], [1, 1, 1, 1, 0], [1, 0, 0, 0, 0], [1, 1, 1, 1, 1]],
    F: [[1, 1, 1, 1, 1], [1, 0, 0, 0, 0], [1, 1, 1, 1, 0], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0]],
    G: [[0, 1, 1, 1, 0], [1, 0, 0, 0, 0], [1, 0, 1, 1, 1], [1, 0, 0, 0, 1], [0, 1, 1, 1, 0]],
    H: [[1, 0, 0, 0, 1], [1, 0, 0, 0, 1], [1, 1, 1, 1, 1], [1, 0, 0, 0, 1], [1, 0, 0, 0, 1]],
    I: [[1, 1, 1, 1, 1], [0, 0, 1, 0, 0], [0, 0, 1, 0, 0], [0, 0, 1, 0, 0], [1, 1, 1, 1, 1]],
    J: [[1, 1, 1, 1, 1], [0, 0, 0, 0, 1], [0, 0, 0, 0, 1], [1, 0, 0, 0, 1], [0, 1, 1, 1, 0]],
    K: [[1, 0, 0, 0, 1], [1, 0, 0, 1, 0], [1, 1, 1, 0, 0], [1, 0, 0, 1, 0], [1, 0, 0, 0, 1]],
    L: [[1, 0, 0, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0], [1, 1, 1, 1, 1]],
    M: [[0, 1, 0, 1, 1], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [1, 0, 0, 0, 1], [1, 0, 0, 0, 1]],
    N: [[1, 0, 0, 0, 1], [1, 1, 0, 0, 1], [1, 0, 1, 0, 1], [1, 0, 0, 1, 1], [1, 0, 0, 0, 1]],
    O: [[1, 1, 1, 1, 1], [1, 0, 0, 0, 1], [1, 0, 0, 0, 1], [1, 0, 0, 0, 1], [1, 1, 1, 1, 1]],
    P: [[1, 1, 1, 1, 1], [1, 0, 0, 0, 1], [1, 1, 1, 1, 1], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0]],
    Q: [[1, 1, 1, 1, 1], [1, 0, 0, 0, 1], [1, 1, 1, 1, 1], [0, 0, 0, 0, 1], [0, 0, 0, 0, 1]],
    R: [[1, 1, 1, 1, 0], [1, 0, 0, 0, 1], [1, 1, 1, 1, 0], [1, 0, 0, 0, 1], [1, 0, 0, 0, 1]],
    S: [[0, 1, 1, 1, 1], [1, 0, 0, 0, 0], [0, 1, 1, 1, 0], [0, 0, 0, 0, 1], [1, 1, 1, 1, 0]],
    T: [[1, 1, 1, 1, 1], [0, 0, 1, 0, 0], [0, 0, 1, 0, 0], [0, 0, 1, 0, 0], [0, 0, 1, 0, 0]],
    U: [[1, 0, 0, 0, 1], [1, 0, 0, 0, 1], [1, 0, 0, 0, 1], [1, 0, 0, 0, 1], [1, 1, 1, 1, 1]],
    V: [[1, 0, 0, 0, 1], [1, 0, 0, 0, 1], [1, 0, 0, 0, 1], [0, 1, 0, 1, 0], [0, 0, 1, 0, 0]],
    W: [[1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1], [1, 1, 1, 1, 1]],
    X: [[1, 0, 0, 0, 1], [0, 1, 0, 1, 0], [0, 0, 1, 0, 0], [0, 1, 0, 1, 0], [1, 0, 0, 0, 1]],
    Y: [[1, 0, 0, 0, 1], [1, 0, 0, 0, 1], [1, 1, 1, 1, 1], [0, 0, 1, 0, 0], [0, 0, 1, 0, 0]],
    Z: [[1, 1, 1, 1, 1], [0, 0, 0, 0, 1], [0, 1, 1, 1, 0], [1, 0, 0, 0, 0], [1, 1, 1, 1, 1]],
    " ": [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]],
    "!": [[0, 1, 0, 0, 0], [0, 1, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]],
    ":": [[0, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]],
    ";": [[0, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0], [1, 0, 0, 0, 0]],
    "1": [[0, 0, 1, 0, 0], [0, 1, 1, 0, 0], [0, 0, 1, 0, 0], [0, 0, 1, 0, 0], [0, 1, 1, 1, 0]],
    "2": [[1, 1, 1, 1, 1], [0, 0, 0, 0, 1], [0, 1, 1, 1, 0], [1, 0, 0, 0, 0], [1, 1, 1, 1, 1]],
    "3": [[1, 1, 1, 1, 1], [0, 0, 0, 0, 1], [0, 1, 1, 1, 0], [0, 0, 0, 0, 1], [1, 1, 1, 1, 1]],
    "4": [[0, 0, 1, 1, 1], [0, 1, 0, 0, 1], [1, 1, 1, 1, 1], [0, 0, 0, 0, 1], [0, 0, 0, 0, 1]],
    "5": [[1, 1, 1, 1, 1], [1, 0, 0, 0, 0], [1, 1, 1, 1, 1], [0, 0, 0, 0, 1], [1, 1, 1, 1, 1]],
    "6": [[0, 1, 1, 1, 0], [1, 0, 0, 0, 0], [1, 1, 1, 1, 0], [1, 0, 0, 0, 1], [0, 1, 1, 1, 1]],
    "7": [[0, 1, 1, 1, 1], [0, 0, 0, 0, 1], [0, 0, 0, 1, 0], [0, 0, 1, 0, 0], [0, 1, 0, 0, 0]],
    "8": [[1, 1, 1, 1, 1], [1, 0, 0, 0, 1], [0, 1, 1, 1, 0], [1, 0, 0, 0, 1], [1, 1, 1, 1, 1]],
    "9": [[0, 1, 1, 1, 1], [1, 0, 0, 0, 1], [0, 1, 1, 1, 1], [0, 0, 0, 0, 1], [0, 1, 1, 1, 0]]
  };

  alphabet10x10 = [];

  create10x10alpha = function() {
    var Xindex, Yindex, columnArray, l, len, len1, letter, m, newLetter, newRow, pixel, pixelArray, results;
    results = [];
    for (letter in alphabet) {
      pixelArray = alphabet[letter];
      newLetter = [];
      for (Yindex = l = 0, len = pixelArray.length; l < len; Yindex = ++l) {
        columnArray = pixelArray[Yindex];
        newRow = [];
        for (Xindex = m = 0, len1 = columnArray.length; m < len1; Xindex = ++m) {
          pixel = columnArray[Xindex];
          newRow.push(pixel);
          newRow.push(pixel);
        }
        newLetter.push(newRow);
        newLetter.push(newRow);
      }
      results.push(alphabet10x10[letter] = newLetter);
    }
    return results;
  };

  create10x10alpha();

  horizontalLetter5x5 = function(Yposition, Xposition, letter, r, g, b) {
    var Xindex, Yindex, columnArray, i, j, l, len, pixel, ref, results;
    if (alphabet[letter] != null) {
      ref = alphabet[letter];
      results = [];
      for (Yindex = l = 0, len = ref.length; l < len; Yindex = ++l) {
        columnArray = ref[Yindex];
        results.push((function() {
          var len1, m, results1;
          results1 = [];
          for (Xindex = m = 0, len1 = columnArray.length; m < len1; Xindex = ++m) {
            pixel = columnArray[Xindex];
            j = Yindex + Yposition;
            i = Xindex + Xposition;
            if (pixel === 1) {
              results1.push(columns[j].setPixel(i, r, g, b));
            } else {
              results1.push(columns[j].setPixel(i, 0, 0, 0));
            }
          }
          return results1;
        })());
      }
      return results;
    }
  };

  horizontalLetter10x10 = function(Yposition, Xposition, letter, r, g, b) {
    var Xindex, Yindex, columnArray, i, j, l, len, pixel, ref, results;
    if (alphabet[letter] != null) {
      ref = alphabet10x10[letter];
      results = [];
      for (Yindex = l = 0, len = ref.length; l < len; Yindex = ++l) {
        columnArray = ref[Yindex];
        results.push((function() {
          var len1, m, results1;
          results1 = [];
          for (Xindex = m = 0, len1 = columnArray.length; m < len1; Xindex = ++m) {
            pixel = columnArray[Xindex];
            j = Yindex + Yposition;
            i = Xindex + Xposition;
            if (pixel === 1) {
              results1.push(columns[j].setPixel(i, r, g, b));
            } else {
              results1.push(columns[j].setPixel(i, 0, 0, 0));
            }
          }
          return results1;
        })());
      }
      return results;
    }
  };

  verticalLetter = function(Yposition, Xposition, letter, r, g, b) {
    var Xindex, Yindex, columnArray, i, j, l, len, pixel, ref, results;
    ref = alphabet[letter];
    results = [];
    for (Xindex = l = 0, len = ref.length; l < len; Xindex = ++l) {
      columnArray = ref[Xindex];
      results.push((function() {
        var len1, m, results1;
        results1 = [];
        for (Yindex = m = 0, len1 = columnArray.length; m < len1; Yindex = ++m) {
          pixel = columnArray[Yindex];
          j = Yindex + Yposition;
          i = Xindex + Xposition;
          if (pixel === 1) {
            results1.push(columns[j].setPixel(i, r, g, b));
          } else {
            results1.push(columns[j].setPixel(i, 0, 0, 0));
          }
        }
        return results1;
      })());
    }
    return results;
  };

  topHorizontalWord = function(start, word, colors) {
    var ci, index, l, len, letter, results, x, y;
    x = 1;
    results = [];
    for (index = l = 0, len = word.length; l < len; index = ++l) {
      letter = word[index];
      ci = index % colors.length;
      y = (start + (12 * index)) % 51;
      if (y > 0) {
        results.push(horizontalLetter10x10(x, y, letter, colors[ci][0], colors[ci][1], colors[ci][2]));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  shortBanner = function(word, r, g, b) {
    var start;
    start = 0;
    return setInterval(function() {
      topHorizontalWord(start, word, r, g, b);
      stream.writePixels(0, strand.buffer);
      ledUtil.clear();
      return start++;
    }, 323);
  };

  longBanner = function(phrase, colors) {
    var i, j, k, start, word;
    start = 50;
    i = 0;
    j = 0;
    k = 0;
    word = phrase[0];
    return setInterval(function() {
      var min;
      topHorizontalWord(start, word, colors);
      stream.writePixels(0, strand.buffer);
      ledUtil.clear();
      if (i % 12 === 0) {
        if (start < 0) {
          start += 12;
        }
        j++;
        min = Math.max(0, j - 5);
        word = phrase.slice(min, j);
        if (word.length === 0) {
          start = 50;
          i = 0;
          j = 0;
          k = 0;
          word = phrase[0];
        }
      }
      i++;
      return start--;
    }, 33);
  };


  /*
  longBanner = (phrase, r, g, b)->
    x = 1
    length = phrase.length
    i = 0
    setInterval ->
      if i > length-8 then i = 0
      visible = phrase[(length-10)-i...length-i]
      topHorizontalWord(x,visible,r,g,b)
      stream.writePixels(0, strand.buffer);
      ledUtil.clear()
      i++
    , 323
   */

  module.exports = {
    shortBanner: shortBanner,
    longBanner: longBanner
  };

}).call(this);
